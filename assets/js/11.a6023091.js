(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{564:function(s,e,n){"use strict";n.r(e);var t=n(12),l=Object(t.a)({},(function(){var s=this.$createElement,e=this._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("div",{staticClass:"language-code extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("├── mock                              // mock 数据\n├── src\n│   ├── api                           // 请求后台 api\n│   ├── assets                        // 放置一些静态资源\n│   │     │── styles                  // 样式资源\n│   │     │    └── element-plus.scss  // 覆盖 element-plus 原有样式\n│   │     │    └── element-theme.scss // 主题颜色\n│   │     │    └── index.scss         // 全局样式\n│   │     │    └── var.scss           // css 变量，在 vite.config 导入\n│   │     │── imgs                    // 图片资源\n│   │     │── typings                 // 一些 ts 文件\n│   │\n│   ├── components                    // 全局的公共组件，main.ts 注入\n│   ├── directives                    // 指令\n│   ├── http                          // axios 封装请求，统一处理接口请求\n│   ├── layout                        // 主题布局\n│   ├── router                        // 路由\n│   │     │── modules                 // 路由模块 （store 接口相同）\n│   │     │── index.ts                // 路由守卫\n│   │     │── routes.ts               // 自动导入所有路由\n│   ├── store                         // 状态管理 vuex 相关配置\n│   ├── utils                         // 工具方法目录\n│   │     └── pageType                // 导入、导出、权限、搜索的关键词(type)\n│   │     └── validation.ts           // 正则校验\n│   │     └── elValidation.ts         // element from 表单校验方法封装\n│   │     └── menus.ts                // 菜单路由\n│   │     └── utils.ts                // 工具方法\n│   ├── views                         // 存在vue页面组件的文件夹\n│   │     │── base                    // 功能模块\n│   │     │    │── role    \t        \t// 页面模块\n│   │     │    │     └── role.vue\n│   │     │    │     └── roleModule.ts\n│   │     │    │     └── add.vue\n")])])])])}),[],!1,null,null,null);e.default=l.exports}}]);